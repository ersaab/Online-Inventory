//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Online_Inventory.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GiftsOnlineDBEntities : DbContext
    {
        public GiftsOnlineDBEntities()
            : base("name=GiftsOnlineDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CategoryTable> CategoryTables { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<LoginCred> LoginCreds { get; set; }
        public virtual DbSet<ProductTable> ProductTables { get; set; }
    
        public virtual int sp_addcat(Nullable<int> categoryID, string categoryName)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("categoryName", categoryName) :
                new ObjectParameter("categoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addcat", categoryIDParameter, categoryNameParameter);
        }
    
        public virtual int sp_addpro(Nullable<int> productID, string productName, string categoryName, Nullable<decimal> productSP, Nullable<int> productQuantity)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("categoryName", categoryName) :
                new ObjectParameter("categoryName", typeof(string));
    
            var productSPParameter = productSP.HasValue ?
                new ObjectParameter("productSP", productSP) :
                new ObjectParameter("productSP", typeof(decimal));
    
            var productQuantityParameter = productQuantity.HasValue ?
                new ObjectParameter("productQuantity", productQuantity) :
                new ObjectParameter("productQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addpro", productIDParameter, productNameParameter, categoryNameParameter, productSPParameter, productQuantityParameter);
        }
    
        public virtual int sp_deletecat(Nullable<int> categoryID, string categoryName)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("categoryName", categoryName) :
                new ObjectParameter("categoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletecat", categoryIDParameter, categoryNameParameter);
        }
    
        public virtual int sp_deletepro(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletepro", productIDParameter);
        }
    
        public virtual int sp_updatecat(Nullable<int> categoryID, string categoryName)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("categoryName", categoryName) :
                new ObjectParameter("categoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updatecat", categoryIDParameter, categoryNameParameter);
        }
    
        public virtual int sp_updatepro(Nullable<int> productID, string productName, string categoryName, Nullable<decimal> productSP, Nullable<int> productQuantity)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("categoryName", categoryName) :
                new ObjectParameter("categoryName", typeof(string));
    
            var productSPParameter = productSP.HasValue ?
                new ObjectParameter("productSP", productSP) :
                new ObjectParameter("productSP", typeof(decimal));
    
            var productQuantityParameter = productQuantity.HasValue ?
                new ObjectParameter("productQuantity", productQuantity) :
                new ObjectParameter("productQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updatepro", productIDParameter, productNameParameter, categoryNameParameter, productSPParameter, productQuantityParameter);
        }
    
        public virtual ObjectResult<sp_viewcat_Result> sp_viewcat(Nullable<int> categoryID, string categoryName)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("categoryName", categoryName) :
                new ObjectParameter("categoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_viewcat_Result>("sp_viewcat", categoryIDParameter, categoryNameParameter);
        }
    
        public virtual ObjectResult<sp_viewpro_Result> sp_viewpro(Nullable<int> productID, string productName, string categoryName, Nullable<decimal> productSP, Nullable<int> productQuantity)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("categoryName", categoryName) :
                new ObjectParameter("categoryName", typeof(string));
    
            var productSPParameter = productSP.HasValue ?
                new ObjectParameter("productSP", productSP) :
                new ObjectParameter("productSP", typeof(decimal));
    
            var productQuantityParameter = productQuantity.HasValue ?
                new ObjectParameter("productQuantity", productQuantity) :
                new ObjectParameter("productQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_viewpro_Result>("sp_viewpro", productIDParameter, productNameParameter, categoryNameParameter, productSPParameter, productQuantityParameter);
        }
    }
}
