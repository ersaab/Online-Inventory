@model Online_Inventory.Models.ProductTable

@Html.ValidationSummary(true)

@{
    ViewBag.Title = "Products";
}

<style>
    h4 {
        font-family: Georgia;
        font-size: 36px;
        color: beige;
    }
</style>


<div class="card-header">
    <h4>All Products in Inventory Listed Here!</h4>
</div>
<br />



<!--Table Content-->

<div class="row">

    <div class="col-7"></div>
    <div class="col-2" style="padding-right:40px; padding-bottom:20px;">

        <!-- Modal Here -->
        <button type="button" class="btn btn-primary" data-target="#ModelAddProduct" data-toggle="modal">+ Add Product</button>

        <div class="modal fade" id="ModelAddProduct" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-md">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h3 class="modal-title">Add Product Here</h3>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>

                    <!-- Modal body -->

                    @using (Html.BeginForm("Productspost", "Home", FormMethod.Post))
                    {
                        <div class="modal-body">
                            <div class="form-group has-success has-feedback">
                                <label for="addpid">Product ID</label>
                                @Html.TextBoxFor(x => x.productId, new { @class = "form-control", @placeholder = "0000" })
                                @Html.ValidationMessageFor(model => model.productId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group has-success has-feedback">
                                <label for="addpname">Product Name</label>
                                @Html.TextBoxFor(x => x.productName, new { @class = "form-control", @placeholder = "Enter Product Name" })
                                @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group has-success has-feedback">
                                <label for="addpcost">Category Name</label>
                                @Html.TextBoxFor(x => x.categoryName, new { @class = "form-control", @placeholder = "Enter Category Name" })
                                @Html.ValidationMessageFor(model => model.categoryName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group has-success has-feedback">
                                <label for="addpcost">Product Cost</label>
                                @Html.TextBoxFor(x => x.productSP, new { @class = "form-control", @placeholder = "Enter Cost" })
                                @Html.ValidationMessageFor(model => model.productSP, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group has-success has-feedback">
                                <label for="addpq">Product Quantity</label>
                                @Html.TextBoxFor(x => x.productQuantity, new { @class = "form-control", @placeholder = "Enter Quantity" })
                                @Html.ValidationMessageFor(model => model.productQuantity, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <!-- Modal footer -->
                        <div class="modal-footer">
                            <button type="reset" class="btn btn-danger">Reset</button>
                            <button type="submit" class="btn btn-info">Submit</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row2">
    <div class="col-1"></div>
    <div class="col-lg-12" style="height:450px; overflow:auto;">
        @{
            Html.RenderAction("ProTable");
        }
    </div>
</div>
